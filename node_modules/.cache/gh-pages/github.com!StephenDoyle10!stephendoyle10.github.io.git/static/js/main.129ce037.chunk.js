(this.webpackJsonpproject_name=this.webpackJsonpproject_name||[]).push([[0],{14:function(e,t,a){},48:function(e,t,a){"use strict";a.r(t);var s=a(0),n=a(1),o=a.n(n),r=a(23),i=a.n(r),c=a(4),l=(a(12),a(5)),h=a(8),d=a(7),b=a(6),j=(a(14),a(50)),p=a(51),u=a(52),m=a.p+"static/media/html-5.821ba738.svg",x=a.p+"static/media/css-3.d5739401.svg",g=a.p+"static/media/javascript-4.13ceb963.svg",O=a.p+"static/media/bootstrap-4.997c463d.svg",f=a.p+"static/media/sass.8aa78a83.svg",w=a.p+"static/media/npm.5066c092.svg",y=a.p+"static/media/nodejs.52cbf9a8.svg",v=a.p+"static/media/mongodb.d89a6eeb.svg",k=a.p+"static/media/git.50214827.svg",N=a.p+"static/media/react3.f1484e29.svg",S=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsxs)(u.a,{md:{span:8,offset:2},children:[Object(s.jsxs)("div",{className:"title",children:[Object(s.jsx)("h1",{children:"Stephen Doyle"}),Object(s.jsx)("h1",{children:"Developer"})]}),Object(s.jsxs)("div",{className:"images",children:[Object(s.jsx)("img",{className:"logos1",src:N,alt:"React"}),Object(s.jsx)("img",{className:"logos1",src:y,alt:"Node.js"}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsx)("img",{className:"logos2",src:v,alt:"MongoDB"}),Object(s.jsx)("br",{}),Object(s.jsx)("img",{className:"logos2",src:w,alt:"NPM"}),Object(s.jsx)("br",{}),Object(s.jsx)("img",{className:"logos2",src:k,alt:"Git"}),Object(s.jsx)("br",{}),Object(s.jsx)("img",{className:"logos2",src:m,alt:"HTML5"}),Object(s.jsx)("img",{className:"logos2",src:x,alt:"CSS3"}),Object(s.jsx)("img",{className:"logos2",src:g,alt:"JavaScript"}),Object(s.jsx)("br",{}),Object(s.jsx)("img",{className:"logos2",src:O,alt:"Bootstrap"}),Object(s.jsx)("img",{className:"logos2",src:f,alt:"Sass"})]})]})})})}}]),a}(o.a.Component),T=a(22),C=a(53),J=a(54);var I=function(){var e=Object(n.useState)(!1),t=Object(T.a)(e,2),a=t[0],o=t[1];return Object(s.jsxs)(C.a,{expanded:a,fixed:"top",className:"portfolioNavbar",expand:"md",children:[Object(s.jsx)(C.a.Brand,{onClick:function(){return o(!1)},as:c.b,className:"navbarText",to:"/",children:"Stephen Doyle"}),Object(s.jsx)(C.a.Toggle,{onClick:function(){return o(!a&&"expanded")},"aria-controls":"basic-navbar-nav"}),Object(s.jsx)(C.a.Collapse,{id:"basic-navbar-nav",children:Object(s.jsxs)(J.a,{children:[Object(s.jsx)(J.a.Link,{onClick:function(){return o(!1)},className:"navbarText",as:c.b,to:"/about",children:"About"}),Object(s.jsx)(J.a.Link,{onClick:function(){return o(!1)},as:c.b,className:"navbarText",to:"/projects",children:"Projects"}),Object(s.jsx)(J.a.Link,{onClick:function(){return o(!1)},as:c.b,className:"navbarText",to:"/articles",children:"Articles"}),Object(s.jsx)(J.a.Link,{onClick:function(){return o(!1)},as:c.b,className:"navbarText",to:"/resources",children:"Resources"}),Object(s.jsx)(J.a.Link,{onClick:function(){return o(!1)},as:c.b,className:"navbarText",to:"/contact",children:"Contact"})]})})]})},H=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",id:"about",children:[Object(s.jsx)("h2",{className:"subheading",children:"About"}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"quote",children:"'Problems are opportunities in disguise'"}),Object(s.jsx)("br",{}),Object(s.jsxs)("p",{children:["I think we can all agree 2020 was a terrible year! With quarantines, lockdowns, self-isolations, and all that kind of fun stuff, most of us had a lot of free time on our hands. I decided to make lemonade with 2020's lemons, and use the extra free time to finally really get into the weeds of a hobby that had always captivated me: programming.",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"Although my previous work experience has been in recruitment, and in teaching English as a foreign language, I knew there were a lot of successful self-taught programmers out there. Like a lot of people, I was already familiar with"," ",Object(s.jsx)("span",{className:"bold",children:"HTML"})," and"," ",Object(s.jsx)("span",{className:"bold",children:"CSS"}),", but in 2020 I started to teach myself JavaScript for the first time, and quickly came to appreciate the flexibility and power of the language.",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"Once I had spent time learning"," ",Object(s.jsx)("span",{className:"bold",children:"JavaScript"})," theory, such as"," ",Object(s.jsx)("span",{className:"bold",children:"regular expressions"}),","," ",Object(s.jsx)("span",{className:"bold",children:"methods"}),","," ",Object(s.jsx)("span",{className:"bold",children:"algorithms"}),","," ",Object(s.jsx)("span",{className:"bold",children:"data-structures"}),", and"," ",Object(s.jsx)("span",{className:"bold",children:"ES6"}),", I started to put this theory into practice by adding JavaScript to HTML/CSS front-end projects as a way to produce single-page web applications that were responsive to user inputs. Of course, as is the tried and tested and clich\xe9d path, I built a"," ",Object(s.jsx)("a",{href:"https://stephendoyle10.github.io/The-Queerculator/",className:"articleLink",target:"_blank",rel:"noopener noreferrer",children:"calculator"})," ","first! Next came an interactive javaScript string method"," ",Object(s.jsx)("a",{href:"https://stephendoyle10.github.io/JS-String-Methods/",className:"articleLink",target:"_blank",rel:"noopener noreferrer",children:"cheat sheet"}),", and then a"," ",Object(s.jsx)("a",{href:"https://stephendoyle10.github.io/UK-Salary-Calculator/",className:"articleLink",target:"_blank",rel:"noopener noreferrer",children:"UK Salary Calculator"}),".",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"The next challenge was to turn my hand to"," ",Object(s.jsx)("span",{className:"bold",children:"full-stack development"}),", and, in particular, to use technologies such as"," ",Object(s.jsx)("span",{className:"bold",children:"Node.js"}),","," ",Object(s.jsx)("span",{className:"bold",children:"Express"})," and"," ",Object(s.jsx)("span",{className:"bold",children:"MongoDB"}),". I decided to combine my twin loves of programming and board gaming to build my first full-stack project using these technologies. This was a web app called"," ",Object(s.jsx)("a",{href:"https://boarpp.herokuapp.com",className:"articleLink",target:"_blank",rel:"noopener noreferrer",children:"Boarpp"}),": a social media project for baordgamers to share boardgame-related texts, pictures and links, and discuss them with other users.",Object(s.jsx)("br",{})," ",Object(s.jsx)("br",{}),"Happy with my progress in Node, next I wanted to start building"," ",Object(s.jsx)("span",{className:"bold",children:"React"})," projects. After completing an online course, my first practical project was to refactor my portfolio website from being a traditional HTML, CSS and JS project into being a React project. I successfully achieved this, and the website you are currently viewing is built with the magic of React! The challenge I am currently working on is to build a MERN stack project - in other words, a full-stack project built with MongoDB, Express, React and Node."]})]})})})})}}]),a}(o.a.Component);var L=function(){var e=Object(n.useState)(!1),t=Object(T.a)(e,2),a=t[0],o=t[1],r=Object(s.jsx)("div",{children:Object(s.jsxs)("p",{className:"extra-content",children:["This application demonstrates use and proficiency in the following languages, tools, frameworks, runtime environments, database programmes, skills etc:",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"HTML",Object(s.jsx)("br",{}),"CSS",Object(s.jsx)("br",{}),"JavaScript",Object(s.jsx)("br",{}),"Modals",Object(s.jsx)("br",{}),"Bootstrap",Object(s.jsx)("br",{}),"Node.js",Object(s.jsx)("br",{}),"NPM",Object(s.jsx)("br",{}),"Express",Object(s.jsx)("br",{}),"Template Engine (Embedded JavaScript/EJS)",Object(s.jsx)("br",{}),"MongoDB",Object(s.jsx)("br",{}),"Mongoose",Object(s.jsx)("br",{}),"User registration/ password encryption (using bcrypt)",Object(s.jsx)("br",{}),"MVC architecture",Object(s.jsx)("br",{}),"Summernote WYSIWYG text editor for formatting posts",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"The application includes the following features:",Object(s.jsx)("br",{}),"-ability to register an account, and sign in and out",Object(s.jsx)("br",{}),"-a feed page which lists all previous posts (sorted by most recent)",Object(s.jsx)("br",{}),"-ability to create a new blog post, with option to upload a picture, which then gets added to the feed",Object(s.jsx)("br",{}),"-a search function in which a user can search previous posts for a keyword"]})}),i=a?"[read less]":"[read more]";return Object(s.jsxs)("div",{className:"project",children:[Object(s.jsx)("h3",{className:"subheading",children:"Boarpp"}),Object(s.jsx)("br",{}),Object(s.jsxs)("div",{className:"projectButtons",children:[Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://boarpp.herokuapp.com")},children:"Visit Boarpp"}),Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://github.com/StephenDoyle10/boarpp")},children:"View Code"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsx)("div",{className:"projectText",children:Object(s.jsxs)("p",{children:["'Boarpp' is a full-stack web app built with Node.js, Express and MongoDB. It is a blogging service for the board game community, in which users can create posts about board games they have played.",Object(s.jsx)("div",{className:"articleLink",onClick:function(){o(!a)},children:Object(s.jsx)("p",{children:i})}),a&&r]})})]})},D=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsxs)("div",{className:"project",children:[Object(s.jsx)("h3",{className:"subheading",children:"Calculator"}),Object(s.jsx)("br",{}),Object(s.jsxs)("div",{className:"projectButtons",children:[Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://stephendoyle10.github.io/The-Queerculator/")},children:"Visit Calculator"}),Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://github.com/StephenDoyle10/The-Queerculator/")},children:"View Code"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsxs)("p",{children:["This calculator is my first ever coding project, and I used it as a opportunity to put into pratice some CSS ideas picked up in the Codecademy CSS course, and to try out integrating JavaScript with HTML.",Object(s.jsx)("br",{})]})]})}}]),a}(o.a.Component);var M=function(){var e=Object(n.useState)(!1),t=Object(T.a)(e,2),a=t[0],o=t[1],r=Object(s.jsx)("div",{children:Object(s.jsxs)("p",{className:"extra-content",children:["1. the user's annual pay after all tax deductions, 2. the user's monthly pay after all tax deductions, 3. how much the user will pay in income tax in the year, 4. how much the user will pay in national insurance contributions in the year.",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"I felt that UK tax rules were sufficiently complex enough that this would be a good demonstration of my algorithm writing ability.",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"The algorithm had to account for both income tax and national insurance contributions.",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"Regarding income tax, the algorithm had to account for the following: 1. employees pay 0% on earnings up to \xa312,500, 2. employees then pay 20% on anything they earn between \xa312,501 and \xa350,000, 3. they pay 40% Income Tax on earnings between \xa350,001 to \xa3150,000, 4. they pay 45% on earnings over \xa3150,001",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"Regarding National Insurance contributions, the algorithm had to account for the following: 1. employees only start to pay National Insurance contributions if they earn more than \xa3183 a week, 2. they pay 12% of their earnings above this limit and up to \xa3962 a week, 3. the rate drops to 2% of their earnings over \xa3962 a week.",Object(s.jsx)("br",{})]})}),i=a?"[read less]":"[read more]";return Object(s.jsxs)("div",{className:"project",children:[Object(s.jsx)("h3",{className:"subheading",children:"UK Salary Calculator"}),Object(s.jsx)("br",{}),Object(s.jsxs)("div",{className:"projectButtons",children:[Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://stephendoyle10.github.io/UK-Salary-Calculator/")},children:"Visit UK Salary Calculator"}),Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://github.com/StephenDoyle10/UK-Salary-Calculator/")},children:"View Code"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsxs)("p",{children:["This project uses an algorithm that takes a user's annual gross salary as an input, and outputs:",Object(s.jsx)("div",{className:"articleLink",onClick:function(){o(!a)},children:Object(s.jsx)("p",{children:i})}),a&&r]})]})},A=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsxs)("div",{className:"project",children:[Object(s.jsx)("h3",{className:"subheading",children:"JavaScript String Method Cheat Sheet"}),Object(s.jsx)("br",{}),Object(s.jsxs)("div",{className:"projectButtons",children:[Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://stephendoyle10.github.io/JS-String-Methods/")},children:"Visit Cheat Sheet"}),Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://github.com/StephenDoyle10/JS-String-Methods/")},children:"View Code"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsxs)("p",{children:["This is my first attempt at writing a HTML webpage that has javaScript functions. I had just completed the javaScript course on freecodecamp, which covered a lot of ground, but did not have much on how to integrate JS with HTML, so I had to research that myself.",Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),"This programme uses HTML input form fields that takes a users input and stores it as a JS variable. Then an onclick event does something with this variable, and returns a new value on the webpage.",Object(s.jsx)("br",{})]}),Object(s.jsx)("br",{})]})}}]),a}(o.a.Component),R=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsxs)("div",{className:"project",children:[Object(s.jsx)("h3",{className:"subheading",children:"Personal Portfolio Website"}),Object(s.jsx)("br",{}),Object(s.jsx)("div",{className:"projectButtons",children:Object(s.jsx)("button",{className:"projectButton",onClick:function(){return window.open("https://github.com/StephenDoyle10/stephendoyle10.github.io/tree/master")},children:"View Code"})}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsxs)("p",{children:["This is the website you are viewing right now! A static website, I originally created this in the traditional way - with HTML and CSS (with a little help from Bootstrap and Sass). However, after learning React, one of my very first React projects was to refactor this website and build it in React. So the website as you see it now is built in React. This was a great exercise to start thinking of websites in the React way, which is a major paradigm shift from from how we traditionally view building websites. Also, this website gave me important practice in using packages such as react-router and react-bootstrap.",Object(s.jsx)("br",{})]}),Object(s.jsx)("br",{})]})}}]),a}(o.a.Component),B=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",id:"projects",children:[Object(s.jsx)("h2",{className:"subheading",children:"Projects"}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:"Full-stack:"}),Object(s.jsx)(L,{}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:"Front-end:"}),Object(s.jsx)(D,{}),Object(s.jsx)(A,{}),Object(s.jsx)(M,{}),Object(s.jsx)(R,{})]})})})})}}]),a}(o.a.Component),E=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",children:[Object(s.jsx)("h2",{className:"subheading",children:"Articles"}),Object(s.jsx)("br",{}),Object(s.jsx)(c.b,{as:c.b,to:"/ComponentTypes",children:Object(s.jsxs)("div",{className:"articleTeaser",children:[Object(s.jsxs)("h5",{children:[Object(s.jsx)("div",{className:"plainP",children:"React Component Types"})," - ",Object(s.jsx)("span",{className:"publishedDate",children:"10 Feb 2021"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"articleTeaserText",children:"The topic of React components touches on a lot of different concepts, such as stateful and stateless components, function components, and class components. Meanwhile, the arrival of Hooks in 2018 changed everything. What do all these things mean, and how do they fit into each other. It can be a bit tricky to understand all these concepts and grasp how they all fit into one another. This article aims to help with that!...[read more]"})]})}),Object(s.jsx)(c.b,{as:c.b,to:"/enginesandruntime",children:Object(s.jsxs)("div",{className:"articleTeaser",children:[Object(s.jsxs)("h5",{children:[Object(s.jsx)("div",{className:"plainP",children:"Engines and Runtime Environments"})," - ",Object(s.jsx)("span",{className:"publishedDate",children:"05 Feb 2021"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"articleTeaserText",children:"Node.JS is a runtime environment. Most people accept that without really realising what a runtime environment actually is. This article looks at what a runtime environments and engines are, why they are necessary for JavaScript, and why Node is a gamechanger in this regard...[read more]"})]})}),Object(s.jsx)(c.b,{as:c.b,to:"/deployingreact",children:Object(s.jsxs)("div",{className:"articleTeaser",children:[Object(s.jsxs)("h5",{children:[Object(s.jsx)("div",{className:"plainP",children:"Deploying React on GitHub Pages"})," - ",Object(s.jsx)("span",{className:"publishedDate",children:"27 Jan 2021"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"articleTeaserText",children:"Luckily there is a fairly straightforward way to deploy a front-end React project online for free, for the world to see! This is done using GitHub, and more specifically, their GitHub pages feature. There are a number of steps involved in this, which this article goes through....[read more]"})]})}),Object(s.jsx)(c.b,{as:c.b,to:"/asyncjsarticle",children:Object(s.jsxs)("div",{className:"articleTeaser",children:[Object(s.jsxs)("h5",{children:[Object(s.jsx)("div",{className:"plainP",children:"Asynchronus Javascript"})," - ",Object(s.jsx)("span",{className:"publishedDate",children:"20 Jan 2021"})]}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"articleTeaserText",children:"Aysynchronous JavaScript touches on a lot of different concepts, such as callback functions, higher order functions, \u2018callback hell\u2019, single- vs multi-threaded code, I/O blocking/non-blocking, the Javascript runtime, the event loop, the call stack, task queue, promises, async/await, web apis, and node apis. It can seem overwhelming, however the aim of the following article is to explain all these concepts and show how they all fit together...[read more]"})]})})]})})})})}}]),a}(o.a.Component),W=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",id:"resources",children:[Object(s.jsx)("h2",{className:"subheading",children:"Resources"}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{children:"Below is a list of some of the resources that helped me in my coding journey, and they all get the Stephen Doyle seal of approval!"}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:"Online/ websites:"}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"freeCodeCamp"}),Object(s.jsx)("a",{className:"articleLink",href:"https://www.freecodecamp.org",target:"_blank",rel:"noopener noreferrer",children:"https://www.freecodecamp.org"}),Object(s.jsx)("p",{children:"freeCodeCamp is an amazing free online course that I used early on in my coding journey. By the time I discovered freeCodeCamp I was already familiar with HTML and CSS, so I skipped the first module, and went straight to 'JavaScript Algorithms and Data Structures'. This was a revelation, I still return to certain sections as a refresher and to test myself. The following freeCodeCamp modules are not as detailed as its JavaScript one, but are still useful introductions to topics such as Bootstrap, Sass, D3, React and Node."}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"Codecademy"}),Object(s.jsx)("a",{className:"articleLink",href:"https://www.codecademy.com",target:"_blank",rel:"noopener noreferrer",children:"https://www.codecademy.com"}),Object(s.jsx)("p",{children:"Codecademy has a huge catalogue of topics and courses, although most of the content is for paid subscribers only. I have only used it for HTML and CSS so far, but can say it was very good for that."}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"Reddit"}),Object(s.jsx)("a",{className:"articleLink",href:"https://www.reddit.com",target:"_blank",rel:"noopener noreferrer",children:"https://www.reddit.com"}),Object(s.jsx)("p",{children:"Reddit is a goldmine for programming content, whether it be discussions, advice, news, resources or something else, its all here. There are dozens of programming-related subreddits worth subscribing too, from general ones such as r/learnprogramming, r/webdev and r/compsci, to niche subreddits centred on a specific language or technology, such as r/javascript, r/node or r/reactjs. However, the one indispensible subreddit everyone should subscribe to is r/programminghumor!"}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"Stack Overflow"}),Object(s.jsx)("a",{className:"articleLink",href:"https://stackoverflow.com",target:"_blank",rel:"noopener noreferrer",children:"https://stackoverflow.com"}),Object(s.jsx)("p",{children:"The most popular programming and computer science help forum out there. If a programmer gets stuck on anything they can ask for help here, and will no doubt have a solution within hours. Although the chances are the question has already been asked and answered, so does not even require a new post."}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"Leetcode"}),Object(s.jsx)("a",{className:"articleLink",href:"https://leetcode.com",target:"_blank",rel:"noopener noreferrer",children:"https://leetcode.com"}),Object(s.jsx)("p",{children:"'Competitive programming' has really taken off in recent years, and there are many websites (with Leetcode being one of the best) that offer coding challenges that programmers use either for fun, or in order to sharpen their algorithm capabilities, often with a view to acing future programming interviews."}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"W3"}),Object(s.jsx)("a",{className:"articleLink",href:"https://www.w3schools.com",target:"_blank",rel:"noopener noreferrer",children:"https://www.w3schools.com"}),Object(s.jsx)("p",{children:"Very well-designed, straightforward and comprehensive website that has a page on practically every different aspect of HTML, CSS and JavaScript, as well as an increasing number of other languages and technologies. Each feature of HTML, CSS or JavaScript that is explained has sample code to demonstrate that feature, as well as a virtual browser window to show how that code looks and words in use."}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:"Podcasts:"}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"CodeNewbie"}),Object(s.jsx)("p",{children:"Very accessible and wholesome podcast designed for new programmers (the clue is in the title!). Each episode deals with a single topic and is centred around an interview of a special guest."}),Object(s.jsx)("p",{className:"mediaName",children:"DevNews"}),Object(s.jsx)("p",{children:"Very similar in tone to CodeNewbie (ie wholesome and accessible), and shares the same host. However, DevNews is more centered on current tech news."}),Object(s.jsx)("p",{className:"mediaName",children:"JavaScript Jabber"}),Object(s.jsx)("p",{children:"A little less newbie-centric than CodeNewbie and DevNews, although still quite accessible, this features roundtable discussions with experts on hot issues, and interviews with special guests."}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:"Books:"}),Object(s.jsx)("h4",{className:"subheading",children:"JavaScript Algorithms and Data Structures:"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"JavaScript Data Structures and Algorithms"})," ","by Sammy Bae"]}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Learning JavaScript Data Structures and Algorithms"})," ","by Loiane Groner"]}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Cracking the Coding Interview: 189 Programming Questions and Solutions"})," ","by Gayle Laakmann McDowell"]}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"Bootstrap:"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Bootstrap 4 - Responsive Web Design"})," ","by Silvio Moreto"]}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"React:"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Beginning React with Hooks"})," by Greg Lim"]}),Object(s.jsx)("p",{children:"This book does for React what Greg Lim's Node book does for Node. Simply, no one writes in a plainer, and more no-nonsense and easy-to-understand style. Like with his Node book, Greg starts with a simple 'hello world' type project and keeps adding to it, making it more and more complex, until without even realising it you have covered loads of topics, and gained a solid grounding in the technology."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"Node.js:"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Beginning Node.js, Express and MongoDB Development"})," ","by Greg Lim"]}),Object(s.jsx)("p",{children:"This is book is less than 150 pages but somehow still manages to walk you through the creation of full stack node.js project from beginning to deployment on heroku. Very concise, well explained and easy to follow."}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Get Programming with Node.js"})," ","by Jonathan Wexler"]}),Object(s.jsx)("p",{children:"Huge (500 pages+), wonderfully designed, and comprehensive book on building a Node.js project, from complete beginning, up to deploying on heroku and testing with mocha and chai."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"MERN Stack (ie React and Node.js combined):"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Pro MERN Stack Full Stack Web App Development with Mongo, Express, React and Node"})," ","by Vasan Subramanian"]}),Object(s.jsx)("p",{children:"Huge and comprehensive book (500+ pages), this book is my current Bible! Covers a lot of ground and goes into loads of technical detail about a wide range of topics related to the MERN stack, but can be tough for beginners."}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Modern Full-Stack Development Using TypeScript, React, Node.js, Webpack and Docker"})," ","by Frank Zammetti"]}),Object(s.jsx)("p",{children:"A great technical manual on all the technologies it covers, but what makes it stand out is how witty and charming a writer Frank Zammetti is. In between the technical instruction he fills the book with entertaining and illuminating industry-insider anecdotes on the history of web development to explain why and how technologies like React, TypeScript, Webpack and Docker came about."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"GraphQL:"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Learning GraphQL: Declarative Data Fetching for Modern Web Apps"})," ","by Eve Porcello and Alex Banks"]}),Object(s.jsx)("p",{children:"Written with much wit and charm, as well as being very clear and detailed, perfect for beginners."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"Biography/ general:"}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"Code: The Hidden Language of Computer Hardware and Software"})," ","by Charles Petzold"]}),Object(s.jsx)("p",{children:"Author Charles Petzold has an amazing ability to make difficult concepts easy to understand. This book covers the history of computer science and shows how things like braile, morse code, telegraphs and relays helped pave the way for the modern computer."}),Object(s.jsxs)("p",{className:"mediaName",children:[Object(s.jsx)("span",{className:"bookTitle",children:"The Innovators"})," by Walter Isaacson"]}),Object(s.jsx)("p",{children:"Extremely entertaining and unputdownable book focusing on all the eccentric genius' that propelled computer science forward, from Charles Babbage and Ada, Countess of Lovelace in the early 19th century, to the usual suspects of Bill Gates and Steve Jobs in the late 20th century. Featuring thrilling accounts of all the biggest discoveries and breakthroughs in computer science such as the invention of the transistor, the microchip, video games, the home computer etc. It covers much of the same ground as another book in this list - Code by Charles Petzold - but the Innovators is much more gossipy and less technical."}),Object(s.jsx)("br",{}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:"Entertainment:"}),Object(s.jsx)("h4",{className:"subheading",children:"TV:"}),Object(s.jsx)("p",{className:"mediaName",children:"Silicon Valley (2014-2019) "}),Object(s.jsx)("p",{children:"Hilarious sitcom following a tech-start up from humble beginnings to fame and fortune. Full of authentic details about programming and the tech world, it's clear they used consultants that know that world inside out."}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"mediaName",children:"Mr Robot (2015-2019)"}),Object(s.jsx)("p",{children:"Drama about anti-capitalist hackers, that centres around one particular coding genius. Has been praised, among other things, for its accurate portrayal of hacking methods."}),Object(s.jsx)("p",{className:"mediaName",children:"Devs (2020)"}),Object(s.jsx)("p",{children:"Disturbing Black-Mirror-esque 6-episode miniseries. As the title suggest, this show is about a group of developers working for a sketchy multi-billion dollar tech company. Engrossing show, but due to the far-fetched plot, I doubt many programmers will find much to relate to, as they would in, say, a show like Silicon Valley."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{className:"subheading",children:"Movies:"}),Object(s.jsx)("p",{className:"mediaName",children:"Jobs (2013)"}),Object(s.jsx)("p",{children:"Very entertaining biopic about Steve Jobs, that centres on three key periods in his life, and in particular around some of his historic presentations. I don't know how accurate this is regarding characterisations of Steve Jobs and other key Apple players, but it is very watchable and fast-paced, and touches on a lot of techical details about Apple that will keep programmers particularly enthralled."}),Object(s.jsx)("br",{})]})})})})}}]),a}(o.a.Component),P=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",id:"contact",children:[Object(s.jsx)("h2",{className:"subheading",children:"Contact"}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{children:"He/him. I can be emailed at:"}),Object(s.jsx)("p",{children:"stephen.doyle10@yahoo.co.uk"}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{children:Object(s.jsxs)("a",{className:"articleLink",href:"https://github.com/StephenDoyle10",target:"_blank",rel:"noopener noreferrer",children:[" ","Github profile"]})})]})})})})}}]),a}(o.a.Component),G=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){var e="Deploying React on GitHub Pages";return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",children:[Object(s.jsxs)("p",{children:[Object(s.jsx)(c.b,{as:c.b,className:"plainP",to:"/articles",children:"Articles"})," > ",e]}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:e}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"publishedDate",children:"27 Jan 2021"}),Object(s.jsxs)("p",{children:["Luckily there is a fairly straightforward way to deploy a front-end React project online for free, for the world to see! This is done using GitHub, and more specifically, their GitHub pages feature. There are a number of steps involved in this, which this article goes through. Also, be advised that for this to work you will need:",Object(s.jsx)("br",{}),"1. a GitHub account,",Object(s.jsx)("br",{}),"2. Node.js installed (check this by typing 'node --version' in the terminal),",Object(s.jsx)("br",{}),"3. git installed (check this by typing 'git --version' in the terminal)",Object(s.jsx)("br",{})]}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{children:"Step 1"}),Object(s.jsx)("p",{children:"Navigate terminal to project directory"}),Object(s.jsx)("h4",{children:"Step 2"}),Object(s.jsx)("p",{children:"On the GitHub website, on your profile, click on 'new repository'. Give the repository a name, click on 'public', although it is not necessary to give it a description or a readme now. Click on 'create'. The repository will be created and you will be redirected to a new page. Leave that page open and in the background for now, we will needing it later."}),Object(s.jsx)("h4",{children:"Step 3"}),Object(s.jsx)("p",{children:"Make sure the terminal is in the project folder, and then type 'npm install gh-pages --save-dev'. It will take a minute to install this package."}),Object(s.jsx)("h4",{children:"Step 4"}),Object(s.jsx)("p",{children:'In your IDE, open the project\'s package.json file. At the very beginning of the object, create a new key/value pair, like so: "homepage":"http://{github username}.github.io/{github repository name}"'}),Object(s.jsx)("h4",{children:"Step 5"}),Object(s.jsx)("p",{children:'In the same package.json file you will need to add two key/value pairs at the top of the scripts object, like so: "predeploy":"npm run build", "deploy":"gh-pages -d build"'}),Object(s.jsx)("h4",{children:"Step 5"}),Object(s.jsx)("p",{children:"Back in terminal (make sure it is in the right folder) type 'git init' and enter."}),Object(s.jsxs)("p",{children:[Object(s.jsx)("span",{className:"italic",children:"What does this do?"}),"\xa0The git init command creates or initializes a new Git project, or repository. It creates a .git folder with all the tools and data necessary to maintain versions. This command only needs to be used once per project to complete the initial setup."]}),Object(s.jsx)("h4",{children:"Step 6"}),Object(s.jsx)("p",{children:"Still in the terminal, back in the browser on the github website, on the page you were redirected to when you created your repository, copy the full line that begins: 'git remote add origin...'. Paste this into the terminal and press enter."}),Object(s.jsxs)("p",{children:[Object(s.jsx)("span",{className:"italic",children:"What does this do?"}),"\xa0We have previously initialized the repository (step 5), and we also have a remote repository at GitHub.com. With step 6, we add the remote URL to our local git repository. This stores the remote URL under a more human-friendly name: origin. We will be using 'origin' in a subsequent step."]}),Object(s.jsx)("h4",{children:"Step 7"}),Object(s.jsx)("p",{children:"Then type 'npm run deploy' and enter. (You may be asked for your GitHub username and password in the terminal)"}),Object(s.jsxs)("p",{children:[Object(s.jsx)("span",{className:"italic",children:"What does this do?"})," When you run 'npm run deploy', the scripts properties inside the package.json file are checked in order to decide what to do next. The \"predeploy\" script will run first: \"npm run build\". This builds the app for production to the build folder. It correctly bundles React in production mode and optimizes the build for the best performance. The build is minified. So after 'npm run build' is performed for the first time, you'll notice that your locally-hosted project now has a build folder, which contains that is not very human-friendly, but it optimized for better performance."]}),Object(s.jsx)("p",{children:'After the predeploy script (ie "npm run build") is performed, the deploy script runs. This is "gh-pages -d build"'}),Object(s.jsx)("h4",{children:"Step 8"}),Object(s.jsx)("p",{children:"In terminal, run 'git add .' and enter. This adds files from the working directory to the staging area"}),Object(s.jsx)("p",{children:"Then run 'git commit -m \"first deployment\" '. This permanently stores file changes from the staging area, and into the local repository."}),Object(s.jsx)("p",{children:"Then run 'git push -u origin master'. This uploads local repository content to a remote repository. In this case, the remote repo is hosted on GitHub, but this could be hosted anywhere."}),Object(s.jsx)("h4",{children:"Finished!"}),Object(s.jsx)("p",{children:"If you go to your repository page now on GitHub, and go to settings, you should see a green box with info telling you where your project has been published online."}),Object(s.jsx)("h2",{children:"Making changes and updating your project"}),Object(s.jsx)("p",{children:"So the above steps are how to deploy your lovely new react app to the internet using GitHub. But of course, you'll be making changes to your app over time, and improving it. How should you update your changes?"}),Object(s.jsx)("p",{children:"On your GitHub repository for your react project there are two branches, the 'gh-pages' branch, and the 'master' branch. The 'master' branch is the same as the code you write on your IDE on your computer/ The 'gh-pages' branch is where this original code has been bundled, using Webpack, for optimal performance in production. Your app is deployed from here."}),Object(s.jsx)("p",{children:"When you make changes to your code in your IDE to the locally stored files, these changes have to be updated to both the master branch and the gh-pages branch on your remote GitHub repository. To update the 'gh-pages' branch, type 'npm run deploy' in the terminal. The 'gh-pages' branch has now updated, and as the deployed app that you see online comes from here, these updates are also reflected in the app as you see it online."}),Object(s.jsx)("p",{children:"HOWEVER, the master branch on GitHub has not been updated. To do this you must type the following three commands into the terminal:"}),Object(s.jsx)("p",{children:"git add ."}),Object(s.jsx)("p",{children:'git commit -m "commit message"'}),Object(s.jsx)("p",{children:"git push -u origin master"}),Object(s.jsx)("p",{children:"After following these steps, the updated code as it exists on your computer should be identical to the code on the master branch of your GitHub repo, while on the 'GH-pages' branch there will be a bundled build of these updates, and so your deployed app online will have the nexessary updates."})]})})})})}}]),a}(o.a.Component),q=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",children:[Object(s.jsx)("h2",{className:"subheading",children:"Micro-articles"}),Object(s.jsx)("br",{}),Object(s.jsxs)("div",{className:"articleTeaser",children:[Object(s.jsx)("h5",{children:Object(s.jsx)("div",{className:"plainP",children:"Note 1"})}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"articleTeaserText",children:"Note 1 text"})]})]})})})})}}]),a}(o.a.Component),F=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){var e="Asynchronous Javascript";return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",children:[Object(s.jsxs)("p",{children:[Object(s.jsx)(c.b,{as:c.b,className:"plainP",to:"/articles",children:"Articles"})," > ",e]}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:e}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"publishedDate",children:"20 Jan 2021"}),Object(s.jsx)("p",{children:"Aysynchronous JavaScript touches on a lot of different concepts, such as callback functions, higher order functions, \u2018callback hell\u2019, single- vs multi-threaded code, I/O blocking/non-blocking, the Javascript runtime, the event loop, the call stack, task queue, promises, async/await, web apis, and node apis. It can seem overwhelming, however the aim of the following article is to explain all these concepts and show how they all fit together."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{children:"What is asynchronous programming and why is it important in web development?"}),Object(s.jsx)("p",{children:"Let\u2019s say you are looking for cheap hotel rooms for your holiday, and you use a website like Trivago that compares prices from hundreds of different sites. You enter in your trip dates and preferred location and when you click submit, Trivago gets to work trawling these hundreds of other websites for the best deals. It will likely take a number of seconds for this request to complete, and to retrieve the requested data."}),Object(s.jsx)("p",{children:"Now, if the website makes a synchronous request, the execution of further code will be blocked until the request is completed and the required data is retrieved, which causes the website to freeze. Not good. But if the website makes an asynchronous request, the browser can continue to execute other code and work as normal, while the request is being completed in the background.  With asynchronous programming, JavaScript can run parts of tasks and continue to other tasks while the previous tasks complete; it does not have to wait for each individual task to complete before moving on to the next one."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{children:"Is JavaScript an aynchronous language?"}),Object(s.jsxs)("p",{children:["JavaScript is a ",Object(s.jsx)("span",{className:"bold",children:"single-threaded"})," language, which means no two bits of script can run at the same time (contrast with Java or C#, which are ",Object(s.jsx)("span",{className:"bold",children:"multi-threaded"})," so can run different pieces of script parallel with each other). This means, by default, and at its core, Javascript is a synchronous language. However, JavaScript can also be made to work asynchronously, which is what makes it so efficient and powerful for both frontend and backend web development, and means a website built with JavaScript doesn\u2019t freeze when, for example, performing an API request."]}),Object(s.jsxs)("p",{children:["Asynchronous javascript has gone through various stages of development over the years, becoming more and more refined and sophisticated. The earliest way to achieve asynchronous JavaScript was with the use of ",Object(s.jsx)("span",{className:"bold",children:"callback functions"}),", although, as we will see, this had its problems, and often resulted in code that was difficult to write, read and debug. ",Object(s.jsx)("span",{className:"bold",children:"Promises"}),", a more elegant way to enable asynchronous JavaScript, was integrated in the ES6/ECMA2015 JavaScript revision. Promises made asynchronous JavaScript code more pleasant to read and write, and in the ES8/ECMA2017 JavaScript revision, more syntactic sugar was added to these promises, with the addition of the \u2018",Object(s.jsx)("span",{className:"bold",children:"async...await"}),"\u2019 syntax."]}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{children:"Callback functions"}),Object(s.jsxs)("p",{children:["Sometimes a function will take another function as one of its parameters. In this case, the function that takes the function as a parameter is called a ",Object(s.jsx)("span",{className:"bold",children:"higher order function"}),", whereas the function that is used as an argument in the higher order function is called a ",Object(s.jsx)("span",{className:"bold",children:"callback function"}),". Many callback functions are synchronous/ blocking, like Javascript in general. However, often callbacks are used to continue code execution after an asynchronous operation has completed \u2014 these are called asynchronous callbacks."]}),Object(s.jsx)("p",{children:"The simplest way to do this is with the setTimeout() method. setTimeout() takes a functions as an argument - ie a callback function. Look at the following code:"}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["console.log(\u201chello\u201d);",Object(s.jsx)("br",{}),"console.log(\u201cgoodbye);"]})}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{children:"When this is run, the following will be logged to the console:"}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["hello",Object(s.jsx)("br",{}),"goodbye"]})}),Object(s.jsx)("p",{children:"Both methods are blocking (which means they block the running of subsequent code until they have finished), and run synchronously, from top to bottom."}),Object(s.jsx)("p",{children:"Now look at the following code:"}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["setTimeout(()=>","{",'console.log("hello")',"}",", 1000); ",Object(s.jsx)("br",{}),'console.log(\u201cgoodbye");']})}),Object(s.jsx)("p",{children:'In this code, console.log(\u201chello") is now an anonymous callback function inside the setTimeout method, and this method has been told not to execute the callback for 1000 ms (1 second). setTimeout method is non-blocking; when it is called, the operation is taken over by the browser, leaving JavaScript to run any subsequent code. The browser/web API takes care of the countdown timer of 1000ms, and when the timer is up, the callback function joins the call stack (via the task queue and the event loop) to be carried out by the JavaScript interpreter. Ultimately, when this code is run, the following will be logged to the console:'}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["goodbye",Object(s.jsx)("br",{}),"hello"]})}),Object(s.jsx)("p",{children:"Node.JS runs on similar principles, and makes heavy use of callback functions. When the higher order function is first called, the operation is offloaded to the system kernel, until it is complete, then passed back to the call stack (via the task queue and event loop) to be carried out by the JavaScript interpreter."}),Object(s.jsx)("p",{children:"For example:"}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["findData(database,(err, result)=>","{",Object(s.jsx)("br",{}),"\xa0\xa0\xa0displayResults(result)","}",") "]})}),Object(s.jsx)("p",{children:"Here, findData() is a method that fetches data from a database. When this is called, the operation is offloaded to the system kernel, which proceeds to retrieve the requested data, while JavaScript is freed up to execute any subsequent code in the process. When the data has been successfully retrieved, the operation is passed back to JavaScript to execute the callback [displayResults(result)], which displays results on the webpage."}),Object(s.jsxs)("p",{children:["It is probably helpful to see this explained in Node's own words. This is taken from their own ",Object(s.jsx)("a",{href:"https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/",children:"documentation"}),":"]}),Object(s.jsx)("blockquote",{children:"The event loop is what allows Node.js to perform non-blocking I/O operations \u2014 despite the fact that JavaScript is single-threaded \u2014 by offloading operations to the system kernel whenever possible. Since most modern kernels are multi-threaded, they can handle multiple operations executing in the background. When one of these operations completes, the kernel tells Node.js so that the appropriate callback may be added to the poll queue to eventually be executed."}),Object(s.jsx)("br",{}),Object(s.jsx)("h4",{children:"Promises, and Async/Await"}),Object(s.jsx)("p",{children:"Callbacks work fine for small operations, but when a project becomes more ambitions, it will likely start to have callbacks within callbacks within callbacks, and so on. For example, your project may make a request to a database, and use the returned data to make another request, and use the returned data of that request to make another request, and so on. This results in something that has been nicknamed the \u2018pyramid of doom\u2019, or \u2018callback hell\u2019, and it results in code that is difficult to write, read, and debug."}),Object(s.jsx)("p",{children:"Promises were implemented in ES6/ECMA 2015 in order to tackle the problem of callback hell. With promises, asynchronous code can be written to look like synchronous code ie neatly aligned vertically, rather than being nested and lurching ever further to the right. The advantage of this is that synchronous code always looks more natural and intuitive to human eyes, and easier to read, write and debug, than asynchronous code."}),Object(s.jsx)("p",{children:"With ES8/ECMA2017, Async/ Await syntax was implemented. This is just syntactic sugar for Promises, meaning it doesn\u2019t introduce any new functionality. The main benefit is that with async/ await, one can write asynchronous code, yet it looks even more like synchronous code and eliminates nesting, making it is easier to read, write and debug (as asynchronous code is often counter-intuitive and difficult to read)."}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{children:"Further reading:"}),Object(s.jsx)("p",{children:"MDN Web Docs: Concurency model and the event loop:"}),Object(s.jsx)("p",{children:Object(s.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop",children:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop"})}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{children:"Video of Philip Robert\u2019s famous presentation \u2018What the heck is the event loop anyway?\u2019:"}),Object(s.jsx)("p",{children:Object(s.jsx)("a",{href:"https://www.youtube.com/watch?v=8aGhZQkoFbQ",children:"https://www.youtube.com/watch?v=8aGhZQkoFbQ"})})]})})})})}}]),a}(o.a.Component),V=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){var e="Engines and Runtime Environments";return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",children:[Object(s.jsxs)("p",{children:[Object(s.jsx)(c.b,{as:c.b,className:"plainP",to:"/articles",children:"Articles"})," > ",e]}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:e}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"publishedDate",children:"05 Feb 2021"}),Object(s.jsx)("p",{children:"A runtime engine is a program or interpreter that reads code, translates it into machine code, and executes it. It takes human-readable code (ie high level code) such as JavaScript, and converts it to low-level machine code. There are numerous engines for JavaScript. For example, Google Chrome has V8, while Firefox has Spider-Monkey. These engines are a key feature of a runtime environment, which is part of the web browser."}),Object(s.jsx)("p",{children:"An engine is necessary to execute JavaScript code, and as JavaScript is the frontend language of web development, this is why every browser has a JavaScript runtime environment (which includes an engine). Google Chrome's JavaScript engine is one of the more popular engines. It is called V8, it is written in C++, and is open source. "}),Object(s.jsx)("p",{children:"So why has JavaScript traditionally been only used on the frontend? As just discussed, Javascript needs a runtime environment, and an engine (which is part of that environment), to interpret and then execute JavaScript code. These runtime environments were traditionally found on browsers, and their purpose was to interpret frontend code (eg JavaScript code to make websites interactive and manipulate the DOM). However, the browser's JavaScript runtime environment could not be used to interpret and execute server-side/ backend code - in web development, backend/ server side code is separate and runs independently of the browser. Node's innovation was to create it's own runtime environment, using V8 as the engine, so that JavaScript code could be executed on the server side. In addition to the V8 engine, the Node runtime environment also includes modules and APIs that give extra functionality to JavaScript code."}),Object(s.jsx)("p",{}),Object(s.jsx)("p",{}),Object(s.jsx)("p",{}),Object(s.jsx)("p",{}),Object(s.jsx)("p",{}),Object(s.jsx)("p",{})]})})})})}}]),a}(o.a.Component),_=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){return Object(l.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"render",value:function(){var e="React Component Types";return Object(s.jsx)(j.a,{children:Object(s.jsx)(p.a,{children:Object(s.jsx)(u.a,{md:{span:8,offset:2},children:Object(s.jsxs)("div",{className:"bodyContent",children:[Object(s.jsxs)("p",{children:[Object(s.jsx)(c.b,{as:c.b,className:"plainP",to:"/articles",children:"Articles"})," > ",e]}),Object(s.jsx)("br",{}),Object(s.jsx)("h3",{className:"subheading",children:e}),Object(s.jsx)("br",{}),Object(s.jsx)("p",{className:"publishedDate",children:"10 Feb 2021"}),Object(s.jsx)("p",{children:"The topic of React components touches on a lot of different concepts, such as stateful and stateless components, function components, and class components. Meanwhile, the arrival of Hooks in 2018 changed everything. What do all these things mean, and how do they fit into each other. It can be a bit tricky to understand all these concepts and grasp how they all fit into one another. This article aims to help with that!"}),Object(s.jsx)("h4",{children:"Function Components"}),Object(s.jsxs)("p",{children:["Function components used to be called functional stateless components, or more simply stateless components, because - big surprise - it used to be impossible for them to contain state. However, since React 16.8 in 2018 and the introduction of Hooks, function components have now received an upgrade, and can now contain state. Before the introduction of Hooks, however, function components were used for components that did not require state. For example, function components can be used for parts of a website that would never have to change based on user input. For example, it is common for visual artists to create simple portfolio websites that are entirely static website. This could happily be composed of all function stateless components. Another almost notorious example is the simple ",Object(s.jsx)("a",{href:"https://www.berkshirehathaway.com",className:"articleLink",target:"_blank",rel:"noopener noreferrer",children:"website"})," for the multi-billion dollar company Berkshire Hathaway, that hasn't had an upgrade in almost 20 years. Again, there is no need for anything other than stateless function components for this website."]}),Object(s.jsx)("p",{children:"A simple function component would look like this:"}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["function HelloWorld() ","{",Object(s.jsx)("br",{}),"\xa0\xa0\xa0return <h1>Hello world!</h1>","}"," "]})}),Object(s.jsx)("h4",{children:"Class Components"}),Object(s.jsx)("p",{children:"The syntax for a class component is a bit more complex. If the above code example for a function component were to be written as a class component it would look like this:"}),Object(s.jsx)("p",{children:"The advantage of class components used to be that they could take state. This means a class component can be modified and updated based on user input. A simple example of this is the humble 'to do list' app, that most beginner programmers have tackled at some point or other! When a user inputs a new list item, and then click submit, no doubt that item will be added to another component. This is done by updating the state of that component."}),Object(s.jsx)("p",{children:"That was the benefit of class components compared to function components. The downside was that the syntax for class components is a bit more complex than for function components. The above function component would look like this if written as a class component:"}),Object(s.jsx)("pre",{children:Object(s.jsxs)("code",{children:["class HelloWorld extends React.Component ","{",Object(s.jsx)("br",{}),"\xa0\xa0\xa0render()","{",Object(s.jsx)("br",{}),"\xa0\xa0\xa0\xa0\xa0\xa0return <h1>Hello world!</h1>;",Object(s.jsx)("br",{}),"\xa0\xa0\xa0","}",Object(s.jsx)("br",{}),"}"]})}),Object(s.jsx)("h4",{children:"Hooks"}),Object(s.jsx)("p",{children:"It is not really very difficult to learn how to create function components and class components, or to learn when one or the other should be used. However, the process is even simpler now, as since the introuction of Hooks in 2018 with React 16.8, there is no longer any need for class components, as function components can now take state."}),Object(s.jsx)("p",{children:"Further reading:"}),Object(s.jsx)("p",{children:"Making Sense of React Hooks: React employee Dan Abramov explains the reasons why Hooks was necessary:"}),Object(s.jsx)("p",{children:Object(s.jsx)("a",{href:"https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889",children:"https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889"})}),Object(s.jsx)("br",{})]})})})})}}]),a}(o.a.Component),U=a(11),z=function(){return Object(s.jsxs)("div",{children:[Object(s.jsx)(I,{}),Object(s.jsxs)(U.c,{children:[Object(s.jsx)(U.a,{path:"/",component:S,exact:!0}),Object(s.jsx)(U.a,{path:"/about",component:H}),Object(s.jsx)(U.a,{path:"/projects",component:B}),Object(s.jsx)(U.a,{path:"/articles",component:E}),Object(s.jsx)(U.a,{path:"/resources",component:W}),Object(s.jsx)(U.a,{path:"/contact",component:P}),Object(s.jsx)(U.a,{path:"/asyncjsarticle",component:F}),Object(s.jsx)(U.a,{path:"/deployingreact",component:G}),Object(s.jsx)(U.a,{path:"/enginesandruntime",component:V}),Object(s.jsx)(U.a,{path:"/componenttypes",component:_}),Object(s.jsx)(U.a,{path:"/notes",component:q})]})]})},Q=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,55)).then((function(t){var a=t.getCLS,s=t.getFID,n=t.getFCP,o=t.getLCP,r=t.getTTFB;a(e),s(e),n(e),o(e),r(e)}))},K=function(e){Object(d.a)(a,e);var t=Object(b.a)(a);function a(){var e;Object(l.a)(this,a);for(var s=arguments.length,n=new Array(s),o=0;o<s;o++)n[o]=arguments[o];return(e=t.call.apply(t,[this].concat(n))).componentDidMount=function(){return window.scrollTo(0,0)},e.componentDidUpdate=function(t){e.props.location!==t.location&&window.scrollTo(0,0)},e.render=function(){return e.props.children},e}return a}(n.PureComponent),Y=Object(U.f)(K);i.a.render(Object(s.jsx)(c.a,{children:Object(s.jsx)(Y,{children:Object(s.jsx)(z,{})})}),document.getElementById("root")),Q()}},[[48,1,2]]]);
//# sourceMappingURL=main.129ce037.chunk.js.map