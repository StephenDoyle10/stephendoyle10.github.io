{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephendoyle/Documents/Coding/ReactGregLim/portfolio/src/ProjectComponents/SalaryCalc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction SalaryCalc() {\n  _s();\n\n  const [readMore, setReadMore] = useState(false);\n\n  const extraContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"extra-content\",\n      children: [\"1. the user's annual pay after all tax deductions, 2. the user's monthly pay after all tax deductions, 3. how much the user will pay in income tax in the year, 4. how much the user will pay in national insurance contributions in the year.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), \"I felt that UK tax rules were sufficiently complex enough that this would be a good demonstration of my algorithm writing ability.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), \"The algorithm had to account for both income tax and national insurance contributions.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), \"Regarding income tax, the algorithm had to account for the following: 1. employees pay 0% on earnings up to \\xA312,500, 2. employees then pay 20% on anything they earn between \\xA312,501 and \\xA350,000, 3. they pay 40% Income Tax on earnings between \\xA350,001 to \\xA3150,000, 4. they pay 45% on earnings over \\xA3150,001\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), \"Regarding National Insurance contributions, the algorithm had to account for the following: 1. employees only start to pay National Insurance contributions if they earn more than \\xA3183 a week, 2. they pay 12% of their earnings above this limit and up to \\xA3962 a week, 3. the rate drops to 2% of their earnings over \\xA3962 a week.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n\n  const linkName = readMore ? \"[read less]\" : \"[read more]\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"subheading\",\n      children: \"UK Salary Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"projectButton\",\n        onClick: () => window.open(\"https://stephendoyle10.github.io/uksalarycalculator/\"),\n        children: \"Visit UK Salary Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"projectButton\",\n        onClick: () => window.open(\"https://github.com/StephenDoyle10/uksalarycalculator\"),\n        children: \"View Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This project uses an algorithm that takes a user's annual gross salary as an input, and outputs:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"articleLink\",\n        onClick: () => {\n          setReadMore(!readMore);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: linkName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), readMore && extraContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryCalc, \"Gr9WvRKLLtjNHth+EeyHNJxIakc=\");\n\n_c = SalaryCalc;\nexport default SalaryCalc;\n/*\n\n\nclass SalaryCalc extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      \n        <div className=\"project\">\n        <h3 className=\"subheading\">UK Salary Calculator</h3>\n        <br />\n        <div className=\"projectButtons\">\n          <button\n            className=\"projectButton\"\n            onClick={() =>\n              window.open(\n                \"https://stephendoyle10.github.io/uksalarycalculator/\"\n              )\n            }\n          >\n            Visit UK Salary Calculator\n          </button>\n          <button\n            className=\"projectButton\"\n            onClick={() =>\n              window.open(\n                \"https://github.com/StephenDoyle10/uksalarycalculator\"\n              )\n            }\n          >\n            View Code\n          </button>\n        </div>\n        <br />\n        <br />\n        <p>\n          This project uses an algorithm that takes a user's annual\n          gross salary as an input, and outputs:{\" \"}\n          <span id=\"dotsTwo\">...</span>\n          <span id=\"moreTwo\">\n            1. the user's annual pay after all tax deductions, 2. the\n            user's monthly pay after all tax deductions, 3. how much the\n            user will pay in income tax in the year, 4. how much the\n            user will pay in national insurance contributions in the\n            year.\n            <br />\n            <br />\n            I felt that UK tax rules were sufficiently complex enough\n            that this would be a good demonstration of my algorithm\n            writing ability.\n            <br />\n            <br />\n            The algorithm had to account for both income tax and\n            national insurance contributions.\n            <br />\n            <br />\n            Regarding income tax, the algorithm had to account for the\n            following: 1. employees pay 0% on earnings up to £12,500, 2.\n            employees then pay 20% on anything they earn between £12,501\n            and £50,000, 3. they pay 40% Income Tax on earnings between\n            £50,001 to £150,000, 4. they pay 45% on earnings over\n            £150,001\n            <br />\n            <br />\n            Regarding National Insurance contributions, the algorithm\n            had to account for the following: 1. employees only start to\n            pay National Insurance contributions if they earn more than\n            £183 a week, 2. they pay 12% of their earnings above this\n            limit and up to £962 a week, 3. the rate drops to 2% of\n            their earnings over £962 a week.\n            <br />\n          </span>\n        </p>\n        <a\n          className=\"articleLink\"\n          onclick=\"readMoreFunctionTwo()\"\n          id=\"readMoreButtonTwo\"\n        >\n          Read more\n        </a>\n      </div>\n              \n    );\n  }\n}\n\nexport default SalaryCalc;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryCalc\");","map":{"version":3,"sources":["/Users/stephendoyle/Documents/Coding/ReactGregLim/portfolio/src/ProjectComponents/SalaryCalc.js"],"names":["React","useState","SalaryCalc","readMore","setReadMore","extraContent","linkName","window","open"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAO,sCAAP;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMI,YAAY,gBAChB;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gRAMM;AAAA;AAAA;AAAA;AAAA,cANN,eAOM;AAAA;AAAA;AAAA;AAAA,cAPN,qJAWM;AAAA;AAAA;AAAA;AAAA,cAXN,eAYM;AAAA;AAAA;AAAA;AAAA,cAZN,yGAeM;AAAA;AAAA;AAAA;AAAA,cAfN,eAgBM;AAAA;AAAA;AAAA;AAAA,cAhBN,oVAuBM;AAAA;AAAA;AAAA;AAAA,cAvBN,eAwBM;AAAA;AAAA;AAAA;AAAA,cAxBN,iWA+BM;AAAA;AAAA;AAAA;AAAA,cA/BN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAqCA,QAAMC,QAAQ,GAAGH,QAAQ,GAAG,aAAH,GAAmB,aAA5C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE,MACPI,MAAM,CAACC,IAAP,CACE,sDADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE,MACPD,MAAM,CAACC,IAAP,CACE,sDADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAyBI;AAAA;AAAA;AAAA;AAAA,YAzBJ,eA0BI;AAAA;AAAA;AAAA;AAAA,YA1BJ,eA2BI;AAAA,kIAGE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,SAJH;AAAA,+BAME;AAAA,oBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAHF,EAWGH,QAAQ,IAAIE,YAXf;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GApFQH,U;;KAAAA,U;AAsFT,eAAeA,UAAf;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction SalaryCalc() {\n  const [readMore, setReadMore] = useState(false);\n  const extraContent = (\n    <div>\n      <p className=\"extra-content\">\n      1. the user's annual pay after all tax deductions, 2. the\n            user's monthly pay after all tax deductions, 3. how much the\n            user will pay in income tax in the year, 4. how much the\n            user will pay in national insurance contributions in the\n            year.\n            <br />\n            <br />\n            I felt that UK tax rules were sufficiently complex enough\n            that this would be a good demonstration of my algorithm\n            writing ability.\n            <br />\n            <br />\n            The algorithm had to account for both income tax and\n            national insurance contributions.\n            <br />\n            <br />\n            Regarding income tax, the algorithm had to account for the\n            following: 1. employees pay 0% on earnings up to £12,500, 2.\n            employees then pay 20% on anything they earn between £12,501\n            and £50,000, 3. they pay 40% Income Tax on earnings between\n            £50,001 to £150,000, 4. they pay 45% on earnings over\n            £150,001\n            <br />\n            <br />\n            Regarding National Insurance contributions, the algorithm\n            had to account for the following: 1. employees only start to\n            pay National Insurance contributions if they earn more than\n            £183 a week, 2. they pay 12% of their earnings above this\n            limit and up to £962 a week, 3. the rate drops to 2% of\n            their earnings over £962 a week.\n            <br />\n      </p>\n    </div>\n  );\n  const linkName = readMore ? \"[read less]\" : \"[read more]\";\n  return (\n    <div className=\"project\">\n        <h3 className=\"subheading\">UK Salary Calculator</h3>\n        <br />\n        <div className=\"projectButtons\">\n          <button\n            className=\"projectButton\"\n            onClick={() =>\n              window.open(\n                \"https://stephendoyle10.github.io/uksalarycalculator/\"\n              )\n            }\n          >\n            Visit UK Salary Calculator\n          </button>\n          <button\n            className=\"projectButton\"\n            onClick={() =>\n              window.open(\n                \"https://github.com/StephenDoyle10/uksalarycalculator\"\n              )\n            }\n          >\n            View Code\n          </button>\n        </div>\n        <br />\n        <br />\n        <p>\n          This project uses an algorithm that takes a user's annual\n          gross salary as an input, and outputs:\n          <div\n            className=\"articleLink\"\n            onClick={() => {\n              setReadMore(!readMore);\n            }}\n          >\n            <p>{linkName}</p>\n          </div>\n          {readMore && extraContent}\n        </p>\n      \n    </div>\n  );\n}\n\nexport default SalaryCalc;\n\n\n\n\n\n/*\n\n\nclass SalaryCalc extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      \n        <div className=\"project\">\n        <h3 className=\"subheading\">UK Salary Calculator</h3>\n        <br />\n        <div className=\"projectButtons\">\n          <button\n            className=\"projectButton\"\n            onClick={() =>\n              window.open(\n                \"https://stephendoyle10.github.io/uksalarycalculator/\"\n              )\n            }\n          >\n            Visit UK Salary Calculator\n          </button>\n          <button\n            className=\"projectButton\"\n            onClick={() =>\n              window.open(\n                \"https://github.com/StephenDoyle10/uksalarycalculator\"\n              )\n            }\n          >\n            View Code\n          </button>\n        </div>\n        <br />\n        <br />\n        <p>\n          This project uses an algorithm that takes a user's annual\n          gross salary as an input, and outputs:{\" \"}\n          <span id=\"dotsTwo\">...</span>\n          <span id=\"moreTwo\">\n            1. the user's annual pay after all tax deductions, 2. the\n            user's monthly pay after all tax deductions, 3. how much the\n            user will pay in income tax in the year, 4. how much the\n            user will pay in national insurance contributions in the\n            year.\n            <br />\n            <br />\n            I felt that UK tax rules were sufficiently complex enough\n            that this would be a good demonstration of my algorithm\n            writing ability.\n            <br />\n            <br />\n            The algorithm had to account for both income tax and\n            national insurance contributions.\n            <br />\n            <br />\n            Regarding income tax, the algorithm had to account for the\n            following: 1. employees pay 0% on earnings up to £12,500, 2.\n            employees then pay 20% on anything they earn between £12,501\n            and £50,000, 3. they pay 40% Income Tax on earnings between\n            £50,001 to £150,000, 4. they pay 45% on earnings over\n            £150,001\n            <br />\n            <br />\n            Regarding National Insurance contributions, the algorithm\n            had to account for the following: 1. employees only start to\n            pay National Insurance contributions if they earn more than\n            £183 a week, 2. they pay 12% of their earnings above this\n            limit and up to £962 a week, 3. the rate drops to 2% of\n            their earnings over £962 a week.\n            <br />\n          </span>\n        </p>\n        <a\n          className=\"articleLink\"\n          onclick=\"readMoreFunctionTwo()\"\n          id=\"readMoreButtonTwo\"\n        >\n          Read more\n        </a>\n      </div>\n              \n    );\n  }\n}\n\nexport default SalaryCalc;\n*/"]},"metadata":{},"sourceType":"module"}