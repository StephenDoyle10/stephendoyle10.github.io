{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephendoyle/Documents/Coding/ReactGregLim/project_name/src/GitHub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactLoading from 'react-loading';\nimport { Media } from 'react-bootstrap';\nimport { getDefaultNormalizer } from '@testing-library/react';\n\nfunction GitHub() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    getData();\n  };\n\n  const getData = async () => {\n    const res = await axios.get(`https://api.github.com/search/users?q=${searchTerm}`);\n    setData(res.data.items);\n    setIsLoading(false);\n  };\n\n  const listUsers = data.map(user => /*#__PURE__*/_jsxDEV(Media, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: user.html_url,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 64,\n        height: 64,\n        className: \"mr-3\",\n        src: user.avatar_url,\n        alt: \"Generic placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Media.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Login: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Id: \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, user.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"GitHub Users Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(ReactLoading, {\n      type: \"spinningBubbles\",\n      color: \"#444\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), listUsers, error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-font-bold\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GitHub, \"MsTzh0+HmQ8CHrxuCQDeMCp/zsk=\");\n\n_c = GitHub;\nexport default GitHub;\n\nvar _c;\n\n$RefreshReg$(_c, \"GitHub\");","map":{"version":3,"sources":["/Users/stephendoyle/Documents/Coding/ReactGregLim/project_name/src/GitHub.js"],"names":["React","useEffect","useState","axios","ReactLoading","Media","getDefaultNormalizer","GitHub","data","setData","searchTerm","setSearchTerm","isLoading","setIsLoading","error","setError","getData","handleSubmit","event","preventDefault","res","get","items","listUsers","map","user","html_url","avatar_url","login","id","target","value","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport ReactLoading from 'react-loading';\nimport { Media } from 'react-bootstrap';\nimport { getDefaultNormalizer } from '@testing-library/react';\n\nfunction GitHub() {\n\n    const [data, setData] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);    \n    const [error, setError] = useState(null);    \n\n    useEffect(() =>{\n        getData();\n    },[])\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setIsLoading(true);\n        getData();\n    }\n    \n    const getData = async() => {\n        \n            const res = await axios.get(`https://api.github.com/search/users?q=${searchTerm}`);                \n            setData(res.data.items)                ;\n            setIsLoading(false);        \n    }\n\n    \n\n    const listUsers = data.map((user) =>             \n        <Media key={user.id}>\n            <a href={user.html_url}>    \n                <img\n                    width={64}\n                    height={64}\n                    className=\"mr-3\"\n                    src={user.avatar_url}\n                    alt=\"Generic placeholder\"\n                />\n            </a>\n            <Media.Body>\n                <h5>Login: {user.login}</h5>\n                <p>Id: { user.id }</p>\n            </Media.Body>\n        </Media>  \n    ); \n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    onChange={event=>setSearchTerm(event.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            <h3>GitHub Users Results</h3>\n            { isLoading &&                             \n                <ReactLoading type=\"spinningBubbles\" color=\"#444\" />             \n            } \n            {listUsers} \n            {error && <div className=\"text-red-font-bold\">{error.message}</div>}                                                                                                   \n        </div>\n    );\n}\n\nexport default GitHub"]},"metadata":{},"sourceType":"module"}